.TH HSH 1 "Au 2021" Version(0.1) "SIMPLE SHELL MAN PAGE"
.SH NAME
.PP
.B hsh - Simple Shell
.PP
.SH SYNOPSIS
.PP
.B ./hsh [command] [options]
.PP
.SH DESCRIPTION
.PP
.B The hsh (Simple Shell) is an end of semester project for students at Holberton School where we expore, understand and build a working functional simple shell program.
.PP
.B Overview
.PP
The simple shell is a simplified iteration of a command line interpreter, similar to
.B bash or dash.
.I FORMAT [ARGUMENT]...
.PP
.SH OPTIONS
.PP
.B Simple Shell operates in both
.I interactive and
.I non-interactive mode. The user may initiate
.B simple shell and begin working or initate
.B simple shell using commands meant to be run by the program.
.PP
.SH ARGUMENTS
.PP
The first argument, argument 0 is understood to be the command to be run by
.B simple shell
and arguments following as modifiers or options.
.SH INVOCATION
.B simple shell
may be invoked with the same functionality in
.I interactive
or
.I non-interactive
mode.  The user may quit the program by typing "exit", "Ctrl + D", or "Ctrl + C" on the command line.
When the program quits or a command has been executed,
.B simple shell
returns with a new prompt: "$ "

.B Examples
.IP

$./hsh

$pwd

/home/vagrant/simple_shell

$

$/bin/pwd

/home/vagrant/simple_shell

$


$./hsh

$ls

AUTHORS		      builtin_functions.c  compare_execute.c  hsh      main_shell.c	   README.md	    simple_shell.h
auxiliar_functions.c  cases_functions.c    control_errors.c   LICENSE  man_1_simple_shell  read_tokenize.c


$

$/bin/ls

AUTHORS		      builtin_functions.c  compare_execute.c  hsh      main_shell.c	   README.md	    simple_shell.h
auxiliar_functions.c  cases_functions.c    control_errors.c   LICENSE  man_1_simple_shell  read_tokenize.c

$
.PP
.SH RESERVED WORDS
.B exit:
quits the program, exits the shell.

.B env:
prints the environment variables
.PP
.SH FILES
.PP
.I simple_shell.h
- In this header file all the necessary libraries and function prototypes are stored, as well as the environ.
.PP
.I main_shell.c
- This file contains the main function of this shell, including the function in charge of handling signs.
.PP
.I read_tokenize.c
- Contains the function that reads the line of the standard input and the tokenizer function as well, which return their result to the main.
.PP
.I compare_execute.c
- In this file there is a function in charge of comparing if the tokens are built-in or belong to the PATH, executing them respectively.
.PP
.I cases_functions.c
- Contains the semicolon function.
.PP
.I builtin_functions.c
- Contains Built-in functions.
.PP
.I auxiliar_functions.c
- Contains all the auxiliary functions that I need to carry out various processes.
.PP
.I control_errors.c
- Contains the function in charge of the error outputs.
.PP
.SH BUGS
.PP
.B Simple Shell:
.PP
https://github.com/mikialx/simple_shell
.PP
.SH AUTHORS
Written by:
.PP
-Micheal kifle
.PP
-Beza Haile.
